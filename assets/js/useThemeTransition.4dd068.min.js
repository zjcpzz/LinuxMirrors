function useThemeTransition(){function updateViewTransitionVariables(isDarkTheme){document.documentElement.style.setProperty('--view-transition-z-index-foreground',isDarkTheme?'999':'1')
document.documentElement.style.setProperty('--view-transition-z-index-background',isDarkTheme?'1':'999')}
function handleThemeToggle(e){e.preventDefault()
e.stopPropagation()
const targetId=this.getAttribute('for')
const targetInput=document.getElementById(targetId)
if(!targetInput)return
const targetTheme=targetInput.getAttribute('data-md-color-scheme')
const systemTheme=window.matchMedia('(prefers-color-scheme: dark)').matches?'slate':'default'
const currentScheme=document.body.getAttribute('data-md-color-scheme')
if(targetTheme==='system'){if(systemTheme===currentScheme){targetInput.click()
return}}else if(targetTheme===currentScheme){targetInput.click()
return}
const isSystemDarkTheme=systemTheme==='slate'
const isCurrentDarkTheme=currentScheme.includes('slate')
const isSwitchToDarkTheme=!isCurrentDarkTheme
updateViewTransitionVariables(isSystemDarkTheme)
const isMovingTowardsSystemTheme=(isSwitchToDarkTheme&&isSystemDarkTheme)||(!isSwitchToDarkTheme&&!isSystemDarkTheme)
const x=e.clientX
const y=e.clientY
const endRadius=Math.hypot(Math.max(x,window.innerWidth-x),Math.max(y,window.innerHeight-y))
const clipPath=[`circle(0px at ${x}px ${y}px)`,`circle(${endRadius}px at ${x}px ${y}px)`]
document.startViewTransition(async()=>{targetInput.click()
document.documentElement.classList.remove(isSwitchToDarkTheme?'light':'dark')
document.documentElement.classList.add(isSwitchToDarkTheme?'dark':'light')
await new Promise((resolve)=>setTimeout(resolve,100))}).ready.then(()=>{document.documentElement.animate({clipPath:isMovingTowardsSystemTheme?[...clipPath].reverse():clipPath,transform:'translateZ(0)',},{duration:500,easing:'ease-in',pseudoElement:isMovingTowardsSystemTheme?'::view-transition-old(root)':'::view-transition-new(root)',})})}
if(typeof document.startViewTransition!=='function'){return}
const themeToggles=document.querySelectorAll('form[data-md-component="palette"] .md-header__button.md-icon')
themeToggles.forEach((toggle)=>{toggle.addEventListener('click',handleThemeToggle,{capture:true})})
const currentScheme=document.body.getAttribute('data-md-color-scheme')
const isDark=currentScheme.includes('slate')
document.documentElement.classList.add(isDark?'dark':'light')
updateViewTransitionVariables(isDark)}
document.addEventListener('DOMContentLoaded',function(){useThemeTransition()})